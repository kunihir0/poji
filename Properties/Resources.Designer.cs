//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace poji.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("poji.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading settings: {0}.
        /// </summary>
        internal static string ConfigurationManager_LoadSettings_Error_loading_settings___0_ {
            get {
                return ResourceManager.GetString("ConfigurationManager_LoadSettings_Error_loading_settings___0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error saving settings: {0}.
        /// </summary>
        internal static string ConfigurationManager_SaveAllSettings_Error_saving_settings___0_ {
            get {
                return ResourceManager.GetString("ConfigurationManager_SaveAllSettings_Error_saving_settings___0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string InputDialog_InitializeControls_Cancel {
            get {
                return ResourceManager.GetString("InputDialog_InitializeControls_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string InputDialog_InitializeControls_OK {
            get {
                return ResourceManager.GetString("InputDialog_InitializeControls_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crosshair Overlay.
        /// </summary>
        internal static string MainForm_InitializeComponent_Crosshair_Overlay {
            get {
                return ResourceManager.GetString("MainForm_InitializeComponent_Crosshair_Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading crosshair settings: {0}.
        /// </summary>
        internal static string MainForm_LoadCrosshairFromSettings_Error_loading_crosshair_settings___0_ {
            get {
                return ResourceManager.GetString("MainForm_LoadCrosshairFromSettings_Error_loading_crosshair_settings___0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crosshair Overlay.
        /// </summary>
        internal static string TrayIconManager_InitializeTrayIcon_Crosshair_Overlay {
            get {
                return ResourceManager.GetString("TrayIconManager_InitializeTrayIcon_Crosshair_Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CS:GO Crosshair Overlay
        ///Version 1.0
        ///
        ///Hotkeys:
        ///Alt+Shift+W: Exit
        ///Alt+Shift+H: Toggle visibility
        ///Alt+Shift+R: Reload crosshair
        ///Alt+Shift+[1-9]: Switch monitor.
        /// </summary>
        internal static string TrayIconManager_OnAboutClicked_ {
            get {
                return ResourceManager.GetString("TrayIconManager_OnAboutClicked_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        internal static string TrayIconManager_OnAboutClicked_About {
            get {
                return ResourceManager.GetString("TrayIconManager_OnAboutClicked_About", resourceCulture);
            }
        }
    }
}
